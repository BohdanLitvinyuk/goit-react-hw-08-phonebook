{"version":3,"file":"static/js/290.7dd305af.chunk.js","mappings":"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","sources":["components/ContactsForm/ContactsForm.jsx","components/Section/Section.jsx","components/ContactsList/ContactList.jsx","components/Filter/Filter.jsx","Pages/contacts.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './ContactForm.css';\nimport { useSelector } from 'react-redux';\n\nexport function ContactsForm({ onSubmit }) {\n  const contacts = useSelector(state => state.phoneBook.contacts.items);\n\n  const [contact, setContact] = useState({\n    name: '',\n    number: '',\n  });\n\n  const handleChange = evt => {\n    const { name, value } = evt.currentTarget;\n    setContact(prevContact => ({\n      ...prevContact,\n      [name]: value,\n    }));\n  };\n\n  const reset = () => {\n    setContact({ number: '', name: '' });\n  };\n\n  const addContact = evt => {\n    evt.preventDefault();\n\n    const existContact = contacts.find(\n      el => el.name.toLowerCase() === contact.name.toLowerCase()\n    );\n    if (existContact) {\n      alert(`${contact.name} is already exist`);\n      reset();\n    } else {\n      const { name, number } = contact;\n      const newContact = { name, number };\n      onSubmit(newContact);\n      reset();\n    }\n  };\n\n  return (\n    <form onSubmit={addContact} className=\"contact_form\">\n      <label className=\"contact_form_label\">\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={contact.name}\n          pattern=\"^[a-zA-Zа-яА-ЯІіЇїҐґ' \\-\\u0400-\\u04FF]+$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChange}\n          className=\"contact_form_input\"\n        />\n      </label>\n      <label className=\"contact_form_label\">\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={contact.number}\n          pattern=\"^[+]?[0-9\\\\.\\\\-\\\\s]{1,15}$\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChange}\n          className=\"contact_form_input\"\n        />\n      </label>\n      <button type=\"submit\"> Add contact</button>\n    </form>\n  );\n}\n","import PropTypes from 'prop-types';\nimport './Section.css';\nexport const Section = ({ title, children }) => {\n  return (\n    <section className=\"section\">\n      <h1> {title}</h1>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n","import PropTypes from 'prop-types';\nimport './ContactList.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/Contacts/contactsOperation';\nimport { contactsOperation } from 'redux/Contacts';\nimport { useEffect,useState } from 'react';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.phoneBook.contacts.items);\n\n  const filter = useSelector(state => state.phoneBook.filter);\n  const [visibleContacts, setVisibleContacts] = useState([]);\n\n  useEffect(() => {\n    dispatch(contactsOperation.getContacts());\n  }, [dispatch]);\n \n  useEffect(() => {\n    const getFilteredContact= () => {\n      const normalizeFilter = filter.toLowerCase();\n      if (contacts.length > 0) {\n        return contacts.filter(contact =>\n          contact.name.toLowerCase().includes(normalizeFilter)\n        );\n      }\n      return contacts;\n    };\n    setVisibleContacts(getFilteredContact());\n  }, [contacts, filter]);\n\n\n  // const getFilteredContact = () => {\n  //   const normalizeFilter = filter.toLowerCase();\n  //   return contacts.filter(contact =>\n  //     contact.name.toLowerCase().includes(normalizeFilter)\n  //   );\n  // };\n\n  // const filteredContact = getFilteredContact();\n\n  return (\n    <ol className=\"contact__list\">\n      {visibleContacts.map(({ id, name, phone }) => {\n        return (\n          <li key={id} id={id} className=\"contact__list__item\">\n            {name}:<span className=\"contact__list__number\">{phone}</span>\n            <button\n              type=\"button\"\n              onClick={() => dispatch(deleteContact({ id }))}\n            >\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ol>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.array,\n  onDeleteContact: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Filter.css';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { filteredContact } from '../../redux/phoneBookSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const value = useSelector(state => state.phoneBook.filter);\n\n  const changeFilter = e => {\n    dispatch(filteredContact(e.target.value));\n  };\n  return (\n    <label className=\"filter__title\">\n      Find contacts by name\n      <input type=\"text\" value={value} onChange={changeFilter} />\n    </label>\n  );\n};\nexport default Filter;\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","\nimport { ContactsForm } from '../components/ContactsForm/ContactsForm';\nimport { Section } from '../components/Section/Section';\nimport { ContactList } from '../components/ContactsList/ContactList';\nimport Filter from '../components/Filter/Filter';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/Contacts/contactsOperation';\n\n\n\nconst Contacts=()=>{\n    \nconst dispatch=useDispatch();\n\nconst addNewContact = (contact) => dispatch(addContact(contact));\n    return (\n        <Section title=\"Phonebook\">\n       <ContactsForm  onSubmit={addNewContact}/>    \n      <h2>Contacts </h2>\n      <Filter />\n      <ContactList /> \n    </Section> \n    )\n}\nexport default Contacts;"],"names":["ContactsForm","_ref","onSubmit","contacts","useSelector","state","phoneBook","items","_useState","useState","name","number","_useState2","_slicedToArray","contact","setContact","handleChange","evt","_evt$currentTarget","currentTarget","value","prevContact","_objectSpread","_defineProperty","reset","_jsxs","preventDefault","find","el","toLowerCase","alert","concat","className","children","_jsx","type","pattern","title","required","onChange","Section","ContactList","dispatch","useDispatch","filter","visibleContacts","setVisibleContacts","useEffect","contactsOperation","getContacts","normalizeFilter","length","includes","getFilteredContact","map","id","phone","onClick","deleteContact","e","filteredContact","target","addContact","Filter"],"sourceRoot":""}